{"remainingRequest":"/home/md/Desktop/myproject/profile/node_modules/babel-loader/lib/index.js!/home/md/Desktop/myproject/profile/node_modules/vuetify/lib/components/VTreeview/VTreeview.js","dependencies":[{"path":"/home/md/Desktop/myproject/profile/node_modules/vuetify/lib/components/VTreeview/VTreeview.js","mtime":1573140232337},{"path":"/home/md/Desktop/myproject/profile/node_modules/cache-loader/dist/cjs.js","mtime":1573140229813},{"path":"/home/md/Desktop/myproject/profile/node_modules/babel-loader/lib/index.js","mtime":1573140229365}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/md/Desktop/myproject/profile/node_modules/vuetify/lib/components/VTreeview/VTreeview.js"],"names":["VTreeviewNode","VTreeviewNodeProps","Themeable","provide","RegistrableProvide","arrayDiff","deepEqual","getObjectValueByPath","mixins","consoleWarn","filterTreeItems","filterTreeItem","extend","name","treeview","props","active","type","Array","dense","Boolean","filter","Function","hoverable","items","multipleActive","open","openAll","returnObject","search","String","selectionType","validator","v","includes","value","data","activeCache","Set","nodes","openCache","selectedCache","computed","excludedItems","excluded","i","length","itemKey","itemText","itemChildren","watch","handler","oldKeys","Object","keys","map","k","item","newKeys","getKeys","diff","forEach","oldSelectedCache","buildTree","emitSelected","deep","handleNodeCacheWatcher","updateActive","emitActive","updateSelected","updateOpen","emitOpen","created","key","mounted","$slots","prepend","append","updateAll","methods","push","children","parent","oldNode","hasOwnProperty","isSelected","isIndeterminate","isActive","isOpen","vnode","node","c","calculateState","add","updateVnodeState","state","counts","reduce","child","emitNodeCache","event","cache","$emit","updateFn","emitFn","old","getDescendants","descendants","getParents","parents","register","unregister","isParent","changed","Map","descendant","set","entries","hasLoaded","checkChildren","then","isExcluded","has","render","h","options","genChild","bind","staticClass","themeClasses"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VTreeview/VTreeview.sass\"; // Components\n\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport { provide as RegistrableProvide } from '../../mixins/registrable'; // Utils\n\nimport { arrayDiff, deepEqual, getObjectValueByPath } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nimport { filterTreeItems, filterTreeItem } from './util/filterTreeItems';\nexport default mixins(RegistrableProvide('treeview'), Themeable\n/* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide() {\n    return {\n      treeview: this\n    };\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => []\n    },\n    dense: Boolean,\n    filter: Function,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => []\n    },\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false\n    },\n    search: String,\n    selectionType: {\n      type: String,\n      default: 'leaf',\n      validator: v => ['leaf', 'independent'].includes(v)\n    },\n    value: {\n      type: Array,\n      default: () => []\n    },\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    activeCache: new Set(),\n    nodes: {},\n    openCache: new Set(),\n    selectedCache: new Set()\n  }),\n  computed: {\n    excludedItems() {\n      const excluded = new Set();\n      if (!this.search) return excluded;\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(this.filter || filterTreeItem, this.items[i], this.search, this.itemKey, this.itemText, this.itemChildren, excluded);\n      }\n\n      return excluded;\n    }\n\n  },\n  watch: {\n    items: {\n      handler() {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey));\n        const newKeys = this.getKeys(this.items);\n        const diff = arrayDiff(newKeys, oldKeys); // We only want to do stuff if items have changed\n\n        if (!diff.length && newKeys.length < oldKeys.length) return; // If nodes are removed we need to clear them from this.nodes\n\n        diff.forEach(k => delete this.nodes[k]);\n        const oldSelectedCache = [...this.selectedCache];\n        this.selectedCache = new Set();\n        this.activeCache = new Set();\n        this.openCache = new Set();\n        this.buildTree(this.items); // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected();\n      },\n\n      deep: true\n    },\n\n    active(value) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive);\n    },\n\n    value(value) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected);\n    },\n\n    open(value) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen);\n    }\n\n  },\n\n  created() {\n    this.buildTree(this.items);\n    this.value.forEach(key => this.updateSelected(key, true));\n    this.active.forEach(key => this.updateActive(key, true));\n  },\n\n  mounted() {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this);\n    }\n\n    if (this.openAll) {\n      this.updateAll(true);\n    } else {\n      this.open.forEach(key => this.updateOpen(key, true));\n      this.emitOpen();\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll(value) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value));\n      this.emitOpen();\n    },\n\n    getKeys(items, keys = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey);\n        keys.push(key);\n        const children = getObjectValueByPath(items[i], this.itemChildren);\n\n        if (children) {\n          keys.push(...this.getKeys(children));\n        }\n      }\n\n      return keys;\n    },\n\n    buildTree(items, parent = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const key = getObjectValueByPath(item, this.itemKey);\n        const children = getObjectValueByPath(item, this.itemChildren, []);\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false,\n          isIndeterminate: false,\n          isActive: false,\n          isOpen: false,\n          vnode: null\n        };\n        const node = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map(c => getObjectValueByPath(c, this.itemKey)),\n          item\n        };\n        this.buildTree(children, key); // This fixed bug with dynamic children resetting selected parent state\n\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected;\n          node.isIndeterminate = this.nodes[parent].isIndeterminate;\n        } else {\n          node.isSelected = oldNode.isSelected;\n          node.isIndeterminate = oldNode.isIndeterminate;\n        }\n\n        node.isActive = oldNode.isActive;\n        node.isOpen = oldNode.isOpen;\n        this.nodes[key] = !children.length ? node : this.calculateState(node, this.nodes); // Don't forget to rebuild cache\n\n        if (this.nodes[key].isSelected) this.selectedCache.add(key);\n        if (this.nodes[key].isActive) this.activeCache.add(key);\n        if (this.nodes[key].isOpen) this.openCache.add(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    calculateState(node, state) {\n      const counts = node.children.reduce((counts, child) => {\n        counts[0] += +Boolean(state[child].isSelected);\n        counts[1] += +Boolean(state[child].isIndeterminate);\n        return counts;\n      }, [0, 0]);\n      node.isSelected = !!node.children.length && counts[0] === node.children.length;\n      node.isIndeterminate = !node.isSelected && (counts[0] > 0 || counts[1] > 0);\n      return node;\n    },\n\n    emitOpen() {\n      this.emitNodeCache('update:open', this.openCache);\n    },\n\n    emitSelected() {\n      this.emitNodeCache('input', this.selectedCache);\n    },\n\n    emitActive() {\n      this.emitNodeCache('update:active', this.activeCache);\n    },\n\n    emitNodeCache(event, cache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache]);\n    },\n\n    handleNodeCacheWatcher(value, cache, updateFn, emitFn) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value;\n      const old = [...cache];\n      if (deepEqual(old, value)) return;\n      old.forEach(key => updateFn(key, false));\n      value.forEach(key => updateFn(key, true));\n      emitFn();\n    },\n\n    getDescendants(key, descendants = []) {\n      const children = this.nodes[key].children;\n      descendants.push(...children);\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants);\n      }\n\n      return descendants;\n    },\n\n    getParents(key) {\n      let parent = this.nodes[key].parent;\n      const parents = [];\n\n      while (parent !== null) {\n        parents.push(parent);\n        parent = this.nodes[parent].parent;\n      }\n\n      return parents;\n    },\n\n    register(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      this.nodes[key].vnode = node;\n      this.updateVnodeState(key);\n    },\n\n    unregister(node) {\n      const key = getObjectValueByPath(node.item, this.itemKey);\n      if (this.nodes[key]) this.nodes[key].vnode = null;\n    },\n\n    isParent(key) {\n      return this.nodes[key].children && this.nodes[key].children.length;\n    },\n\n    updateActive(key, isActive) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false;\n          this.updateVnodeState(active);\n          this.activeCache.delete(active);\n        });\n      }\n\n      const node = this.nodes[key];\n      if (!node) return;\n      if (isActive) this.activeCache.add(key);else this.activeCache.delete(key);\n      node.isActive = isActive;\n      this.updateVnodeState(key);\n    },\n\n    updateSelected(key, isSelected) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const changed = new Map();\n\n      if (this.selectionType !== 'independent') {\n        const descendants = [key, ...this.getDescendants(key)];\n        descendants.forEach(descendant => {\n          this.nodes[descendant].isSelected = isSelected;\n          this.nodes[descendant].isIndeterminate = false;\n          changed.set(descendant, isSelected);\n        });\n        const parents = this.getParents(key);\n        parents.forEach(parent => {\n          this.nodes[parent] = this.calculateState(this.nodes[parent], this.nodes);\n          changed.set(parent, this.nodes[parent].isSelected);\n        });\n      } else {\n        this.nodes[key].isSelected = isSelected;\n        this.nodes[key].isIndeterminate = false;\n        changed.set(key, isSelected);\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key);\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue;\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key);\n      }\n    },\n\n    updateOpen(key, isOpen) {\n      if (!this.nodes.hasOwnProperty(key)) return;\n      const node = this.nodes[key];\n      const children = getObjectValueByPath(node.item, this.itemChildren);\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen));\n      } else if (children && children.length) {\n        node.isOpen = isOpen;\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key);\n        this.updateVnodeState(key);\n      }\n    },\n\n    updateVnodeState(key) {\n      const node = this.nodes[key];\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected;\n        node.vnode.isIndeterminate = node.isIndeterminate;\n        node.vnode.isActive = node.isActive;\n        node.vnode.isOpen = node.isOpen;\n      }\n    },\n\n    isExcluded(key) {\n      return !!this.search && this.excludedItems.has(key);\n    }\n\n  },\n\n  render(h) {\n    const children = this.items.length ? this.items.map(VTreeviewNode.options.methods.genChild.bind(this))\n    /* istanbul ignore next */\n    : this.$slots.default; // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses\n      }\n    }, children);\n  }\n\n});\n//# sourceMappingURL=VTreeview.js.map"]}]}