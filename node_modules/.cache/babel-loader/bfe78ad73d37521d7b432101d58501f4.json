{"remainingRequest":"/home/md/Desktop/profile/node_modules/babel-loader/lib/index.js!/home/md/Desktop/profile/node_modules/vuetify/lib/components/VGrid/VCol.js","dependencies":[{"path":"/home/md/Desktop/profile/node_modules/vuetify/lib/components/VGrid/VCol.js","mtime":1573040736000},{"path":"/home/md/Desktop/profile/node_modules/cache-loader/dist/cjs.js","mtime":1573040736000},{"path":"/home/md/Desktop/profile/node_modules/babel-loader/lib/index.js","mtime":1573040736000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/md/Desktop/profile/node_modules/vuetify/lib/components/VGrid/VCol.js"],"names":["Vue","mergeData","upperFirst","breakpoints","breakpointProps","reduce","props","val","type","Boolean","String","Number","offsetProps","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","cols","alignSelf","validator","str","includes","justifySelf","tag","render","h","data","children","parent","cacheKey","classList","get","forEach","value","push","hasColClasses","some","startsWith","set"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP;AACA,SAASC,UAAT,6B,CAAiD;;AAEjD,IAAMC,WAAW,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAApB;;AAEA,IAAMC,eAAe,GAAI,YAAM;AAC7B,SAAOD,WAAW,CAACE,MAAZ,CAAmB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACxCD,IAAAA,KAAK,CAACC,GAAD,CAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,CADK;AAEX,iBAAS;AAFE,KAAb;AAIA,WAAOL,KAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD,CARuB,EAAxB;;AAUA,IAAMM,WAAW,GAAI,YAAM;AACzB,SAAOT,WAAW,CAACE,MAAZ,CAAmB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACxCD,IAAAA,KAAK,CAAC,WAAWJ,UAAU,CAACK,GAAD,CAAtB,CAAL,GAAoC;AAClCC,MAAAA,IAAI,EAAE,CAACE,MAAD,EAASC,MAAT,CAD4B;AAElC,iBAAS;AAFyB,KAApC;AAIA,WAAOL,KAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD,CARmB,EAApB;;AAUA,IAAMO,UAAU,GAAI,YAAM;AACxB,SAAOV,WAAW,CAACE,MAAZ,CAAmB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACxCD,IAAAA,KAAK,CAAC,UAAUJ,UAAU,CAACK,GAAD,CAArB,CAAL,GAAmC;AACjCC,MAAAA,IAAI,EAAE,CAACE,MAAD,EAASC,MAAT,CAD2B;AAEjC,iBAAS;AAFwB,KAAnC;AAIA,WAAOL,KAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD,CARkB,EAAnB;;AAUA,IAAMQ,OAAO,GAAG;AACdC,EAAAA,GAAG,EAAEC,MAAM,CAACC,IAAP,CAAYb,eAAZ,CADS;AAEdc,EAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYL,WAAZ,CAFM;AAGdO,EAAAA,KAAK,EAAEH,MAAM,CAACC,IAAP,CAAYJ,UAAZ;AAHO,CAAhB;;AAMA,SAASO,eAAT,CAAyBZ,IAAzB,EAA+Ba,IAA/B,EAAqCd,GAArC,EAA0C;AACxC,MAAIe,SAAS,GAAGd,IAAhB;;AAEA,MAAID,GAAG,IAAI,IAAP,IAAeA,GAAG,KAAK,KAA3B,EAAkC;AAChC,WAAOgB,SAAP;AACD;;AAED,MAAIF,IAAJ,EAAU;AACR,QAAMG,UAAU,GAAGH,IAAI,CAACI,OAAL,CAAajB,IAAb,EAAmB,EAAnB,CAAnB;AACAc,IAAAA,SAAS,eAAQE,UAAR,CAAT;AACD,GAVuC,CAUtC;AACF;AACA;;;AAGA,MAAIhB,IAAI,KAAK,KAAT,KAAmBD,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAK,IAAzC,CAAJ,EAAoD;AAClD;AACA,WAAOe,SAAS,CAACI,WAAV,EAAP;AACD,GAlBuC,CAkBtC;;;AAGFJ,EAAAA,SAAS,eAAQf,GAAR,CAAT;AACA,SAAOe,SAAS,CAACI,WAAV,EAAP;AACD;;AAED,IAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;AACA,eAAe5B,GAAG,CAAC6B,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAE,OADkB;AAExBC,EAAAA,UAAU,EAAE,IAFY;AAGxBzB,EAAAA,KAAK;AACH0B,IAAAA,IAAI,EAAE;AACJxB,MAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,CADF;AAEJ,iBAAS;AAFL;AADH,KAKAP,eALA;AAMHc,IAAAA,MAAM,EAAE;AACNV,MAAAA,IAAI,EAAE,CAACE,MAAD,EAASC,MAAT,CADA;AAEN,iBAAS;AAFH;AANL,KAUAC,WAVA;AAWHO,IAAAA,KAAK,EAAE;AACLX,MAAAA,IAAI,EAAE,CAACE,MAAD,EAASC,MAAT,CADD;AAEL,iBAAS;AAFJ;AAXJ,KAeAE,UAfA;AAgBHoB,IAAAA,SAAS,EAAE;AACTzB,MAAAA,IAAI,EAAEE,MADG;AAET,iBAAS,IAFA;AAGTwB,MAAAA,SAAS,EAAE,mBAAAC,GAAG;AAAA,eAAI,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,EAAmC,UAAnC,EAA+C,SAA/C,EAA0DC,QAA1D,CAAmED,GAAnE,CAAJ;AAAA;AAHL,KAhBR;AAqBHE,IAAAA,WAAW,EAAE;AACX7B,MAAAA,IAAI,EAAEE,MADK;AAEX,iBAAS,IAFE;AAGXwB,MAAAA,SAAS,EAAE,mBAAAC,GAAG;AAAA,eAAI,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,EAAmC,UAAnC,EAA+C,SAA/C,EAA0DC,QAA1D,CAAmED,GAAnE,CAAJ;AAAA;AAHH,KArBV;AA0BHG,IAAAA,GAAG,EAAE;AACH9B,MAAAA,IAAI,EAAEE,MADH;AAEH,iBAAS;AAFN;AA1BF,IAHmB;AAmCxB6B,EAAAA,MAnCwB,kBAmCjBC,CAnCiB,QAwCrB;AAAA,QAJDlC,KAIC,QAJDA,KAIC;AAAA,QAHDmC,IAGC,QAHDA,IAGC;AAAA,QAFDC,QAEC,QAFDA,QAEC;AAAA,QADDC,MACC,QADDA,MACC;AACD;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAMvB,IAAX,IAAmBf,KAAnB,EAA0B;AACxBsC,MAAAA,QAAQ,IAAIlC,MAAM,CAACJ,KAAK,CAACe,IAAD,CAAN,CAAlB;AACD;;AAED,QAAIwB,SAAS,GAAGlB,KAAK,CAACmB,GAAN,CAAUF,QAAV,CAAhB;;AAEA,QAAI,CAACC,SAAL,EAAgB;AAAA;AAAA;;AACdA,QAAAA,SAAS,GAAG,EAAZ,CADc,CACE;;AAEhB,YAAIrC,IAAJ;;AAEA,aAAKA,IAAL,IAAaM,OAAb,EAAsB;AACpBA,UAAAA,OAAO,CAACN,IAAD,CAAP,CAAcuC,OAAd,CAAsB,UAAA1B,IAAI,EAAI;AAC5B,gBAAM2B,KAAK,GAAG1C,KAAK,CAACe,IAAD,CAAnB;AACA,gBAAMC,SAAS,GAAGF,eAAe,CAACZ,IAAD,EAAOa,IAAP,EAAa2B,KAAb,CAAjC;AACA,gBAAI1B,SAAJ,EAAeuB,SAAS,CAACI,IAAV,CAAe3B,SAAf;AAChB,WAJD;AAKD;;AAED,YAAM4B,aAAa,GAAGL,SAAS,CAACM,IAAV,CAAe,UAAA7B,SAAS;AAAA,iBAAIA,SAAS,CAAC8B,UAAV,CAAqB,MAArB,CAAJ;AAAA,SAAxB,CAAtB;AACAP,QAAAA,SAAS,CAACI,IAAV;AACE;AACAlC,UAAAA,GAAG,EAAE,CAACmC,aAAD,IAAkB,CAAC5C,KAAK,CAAC0B;AAFhC,0DAGU1B,KAAK,CAAC0B,IAHhB,GAGyB1B,KAAK,CAAC0B,IAH/B,qDAIa1B,KAAK,CAACY,MAJnB,GAI8BZ,KAAK,CAACY,MAJpC,oDAKYZ,KAAK,CAACa,KALlB,GAK4Bb,KAAK,CAACa,KALlC,yDAMiBb,KAAK,CAAC2B,SANvB,GAMqC3B,KAAK,CAAC2B,SAN3C,2DAOmB3B,KAAK,CAAC+B,WAPzB,GAOyC/B,KAAK,CAAC+B,WAP/C;AASAV,QAAAA,KAAK,CAAC0B,GAAN,CAAUT,QAAV,EAAoBC,SAApB;AAvBc;AAwBf;;AAED,WAAOL,CAAC,CAAClC,KAAK,CAACgC,GAAP,EAAYrC,SAAS,CAACwC,IAAD,EAAO;AAClC,eAAOI;AAD2B,KAAP,CAArB,EAEJH,QAFI,CAAR;AAGD;AA/EuB,CAAX,CAAf","sourcesContent":["import \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\n\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    justifySelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children,\n    parent\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    let classList = cache.get(cacheKey);\n\n    if (!classList) {\n      classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n      let type;\n\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'));\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n        [`justify-self-${props.justifySelf}`]: props.justifySelf\n      });\n      cache.set(cacheKey, classList);\n    }\n\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VCol.js.map"]}]}